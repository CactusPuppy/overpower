import "../lib/OSTWUtils/ButtonControl.del";
import "../lib/OSTWUtils/EasingFunctions.del";


rule: "[cutscene/cutscene_player.del] Handle cutscene logic"
Event.OngoingPlayer
if (CUTSCENE_GAME_STATES.Contains(currentGameState))
{
  // ForcePlayerHero(EventPlayer(), Hero.Echo);
  SetInvisible(EventPlayer(), InvisibleTo.All);
  AddOneLockToAllButtons();
  StartTransformingThrottle(EventPlayer(), 0, 0, FacingDirectionOf());
  DisableScoreboard(EventPlayer());
  DisableGameModeHud();
  DisableHeroHud();
  timer = 0;
  StartCamWith1PTransition(
    player:         EventPlayer(),
    timer:          timer,
    eyePosition:    UpdateEveryFrame(cutsceneCamPos),
    lookAtPosition: UpdateEveryFrame(cutsceneCamPos + cutsceneCamFac),
    transDuration:  0.5);

  WaitUntil(!CUTSCENE_GAME_STATES.Contains(currentGameState), 1000000);

  SetInvisible(EventPlayer(), InvisibleTo.None);
  StopForcingPlayerPosition();
  RemoveOneLockFromAllButtons();
  StopTransformingThrottle();
  EnableTextChat(EventPlayer());
  EnableScoreboard(EventPlayer());
  EnableGameModeHud();
  EnableHeroHud();
  StopForcingHero(EventPlayer());

  # Wait a quarter of a second to allow clients to know if they are in assembling heroes
  if (currentGameState == GameState.SELECTING_HEROES) Wait(0.25);
  StopCamWith1PTransition(
    player:         EventPlayer(),
    timer:          timer,
    eyePosition:    UpdateEveryFrame(cutsceneCamPos),
    lookAtPosition: UpdateEveryFrame(cutsceneCamPos + cutsceneCamFac),
    transDuration:  0.5);
}
